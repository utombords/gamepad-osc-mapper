name: build-and-release

on:
  push:
    tags:
      - 'v*'

# Ensure the GITHUB_TOKEN has permission to create releases
permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      CERT_PFX_B64: ${{ secrets.CERT_PFX }}
      CERT_PASSWORD: ${{ secrets.CERT_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller Flask Flask-SocketIO python-engineio python-socketio python-osc jinja2
      - name: Build artifacts
        run: |
          pyinstaller --clean --noconfirm main.spec
      - name: Import code-signing certificate
        if: ${{ env.CERT_PFX_B64 != '' && env.CERT_PASSWORD != '' }}
        shell: pwsh
        run: |
          $bytes = [Convert]::FromBase64String($env:CERT_PFX_B64)
          [IO.File]::WriteAllBytes('dist/cert.pfx', $bytes)
          echo "::notice title=Code Signing::PFX imported to dist/cert.pfx"
      - name: Code sign artifacts (one-file EXE)
        if: ${{ env.CERT_PFX_B64 != '' && env.CERT_PASSWORD != '' }}
        shell: pwsh
        run: |
          $signtool = 'signtool'
          & $signtool sign /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 /f dist/cert.pfx /p "$env:CERT_PASSWORD" dist/GamepadOSCMapper.exe
      - name: Code sign artifacts (one-folder EXE & DLLs)
        if: ${{ env.CERT_PFX_B64 != '' && env.CERT_PASSWORD != '' }}
        shell: pwsh
        run: |
          if (Test-Path dist/GamepadOSCMapper) {
            Get-ChildItem -Recurse dist/GamepadOSCMapper -Include *.exe,*.dll | ForEach-Object {
              signtool sign /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 /f dist/cert.pfx /p "$env:CERT_PASSWORD" $_.FullName
            }
          }
      - name: Hash artifact
        shell: pwsh
        run: |
          $hash = Get-FileHash "dist/GamepadOSCMapper.exe" -Algorithm SHA256
          "$($hash.Hash)  GamepadOSCMapper.exe" | Out-File -Encoding ascii "dist/GamepadOSCMapper.exe.sha256"
      - name: Create portable ZIP
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist/portable/GamepadOSCMapper | Out-Null
          Copy-Item -Path dist/GamepadOSCMapper.exe -Destination dist/portable/GamepadOSCMapper/
          if (Test-Path README.md) { Copy-Item README.md dist/portable/GamepadOSCMapper/ }
          if (Test-Path LICENSE) { Copy-Item LICENSE dist/portable/GamepadOSCMapper/ }
          if (Test-Path CHANGELOG.md) { Copy-Item CHANGELOG.md dist/portable/GamepadOSCMapper/ }
          if (Test-Path THIRD_PARTY_NOTICES.md) { Copy-Item THIRD_PARTY_NOTICES.md dist/portable/GamepadOSCMapper/ }
          if (Test-Path docs/JoyShockLibraryMOD.txt) { New-Item -ItemType Directory -Force -Path dist/portable/GamepadOSCMapper/docs | Out-Null; Copy-Item docs/JoyShockLibraryMOD.txt dist/portable/GamepadOSCMapper/docs/ }
          New-Item -ItemType Directory -Force -Path dist/portable/GamepadOSCMapper/configs | Out-Null
          New-Item -ItemType File -Force -Path dist/portable/GamepadOSCMapper/configs/.keep | Out-Null
          $zipName = "GamepadOSCMapper-$env:GITHUB_REF_NAME-win64.zip"
          if ($env:GITHUB_REF_NAME -eq $null -or $env:GITHUB_REF_NAME -eq '') { $zipName = "GamepadOSCMapper-portable-win64.zip" }
          Compress-Archive -Path dist/portable/GamepadOSCMapper/* -DestinationPath dist/$zipName -Force
      - name: Zip one-folder artifact
        if: always()
        shell: pwsh
        run: |
          if (Test-Path dist/GamepadOSCMapper) {
            $zipName = "GamepadOSCMapper-onefolder-$env:GITHUB_REF_NAME-win64.zip"
            if ($env:GITHUB_REF_NAME -eq $null -or $env:GITHUB_REF_NAME -eq '') { $zipName = "GamepadOSCMapper-onefolder-win64.zip" }
            Compress-Archive -Path dist/GamepadOSCMapper/* -DestinationPath dist/$zipName -Force
          }
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: GamepadOSCMapper-win
          path: |
            dist/GamepadOSCMapper.exe
            dist/GamepadOSCMapper.exe.sha256
            dist/GamepadOSCMapper-*-win64.zip
            dist/GamepadOSCMapper-onefolder-*-win64.zip

  release:
    needs: build-windows
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: GamepadOSCMapper-win
          path: dist
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/GamepadOSCMapper.exe
            dist/GamepadOSCMapper.exe.sha256
            dist/GamepadOSCMapper-*-win64.zip
            dist/GamepadOSCMapper-onefolder-*-win64.zip
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


